services:
  web:
    build: .
    command: >
      bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - celery
      - celery-beat

  db:
    image: postgres
    env_file:
      - .env
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    expose:
      - "6379"
    restart: always

  celery:
    build: .
    command: celery -A Module8 worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - .:/code

  celery-beat:
    build: .
    command: celery -A Module8 beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - .:/code

  nginx:
    build: .
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./html:/usr/share/nginx/html

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: artemtrololo
          POSTGRES_DB: django_project
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

networks:
  default:

volumes:
  postgres_data:
  static_volume: